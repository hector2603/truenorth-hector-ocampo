plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.truenorth'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.1.4'
	implementation 'org.springframework.security:spring-security-config:6.1.4'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'

}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/application/**',
							  '**/infraestructure/**',
							  '**/model/**',
							  '**/TruenorthApplication**'])
		})
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
